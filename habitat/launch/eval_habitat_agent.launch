<launch>

    <!-- path definition-->
    <arg name="camera_calib" default="$(find habitat_ros)/scripts/envs/habitat/configs/camera_info.yaml" />
    <arg name="config_dir" default="$(find habitat_ros)/scripts/envs/habitat/configs/" />
    <arg name="task_config" default="tasks/objectnav_gibson.yaml" />
    <arg name="sem_config_dir" default="$(find habitat_ros)/scripts/agents/configs/" />
    <arg name="prior_dir" default="$(find habitat_ros)/prior_data/" />
    <arg name="scene_prior_matrix_file" default="train_scene_prior.npz" />
    <arg name="language_prior_matrix_file" default="language_prior.npz" />

    <!-- <arg name="agent_type" default="frontier_explore" /> -->
    <!-- <arg name="agent_type" default="frontier_2d_detection" /> -->
    <arg name="agent_type" default="frontier_sgnav" />
    <arg name="wheel_odom" default="false" />
    <arg name="wheel_odom_frame_id" default="odom_wheel" />
    <arg name="ground_truth_odom" default="true" />
    <arg name="ground_truth_odom_topic" default="/true_odom" />
    <arg name="sem_cloud_topic" default="/rtabsem/cloud_map" />
    <arg name="ground_truth_scene_graph" default="true" />
    <arg name="agent_update_rate" default="4.0" />
    <arg name="initial_map_size" default="10.0" />
    <arg name="map_update_mode" default="request" />

    <node pkg="habitat_ros" type="eval.py" name="eval_habitat_env" output="screen">
        <!-- path definition -->
        <param name="camera_calib" value="$(arg camera_calib)" />
        <param name="config_dir" value="$(arg config_dir)" />
        <param name="task_config" value="$(arg task_config)" />
        <param name="sem_config_dir" value="$(arg sem_config_dir)" />
        <param name="prior_dir" value="$(arg prior_dir)" />
        <param name="scene_prior_matrix_file" value="$(arg scene_prior_matrix_file)" />
        <param name="language_prior_matrix_file" value="$(arg language_prior_matrix_file)" />

        <!-- general arguments -->
        <param name="agent_type" value="$(arg agent_type)" />
        <param name="rate" type="double" value="$(arg agent_update_rate)" />
        <param name="initial_map_size" value="$(arg initial_map_size)" />
        <param name="map_update_mode" value="$(arg map_update_mode)" />
        <param name="ground_truth_scene_graph" value="$(arg ground_truth_scene_graph)" />

        <!-- topics  -->
        <param name="rgb_topic" value="/camera/rgb/image" />
        <param name="depth_topic" value="/camera/depth/image" />
        <param name="semantic_topic" value="/camera/semantic/image" />
        <param name="camera_info_topic" value="/camera/rgb/camera_info" />
        <!-- <param name="wheel_odom_topic" value="/wheel_odom" if="$(arg wheel_odom)"/>  -->
        <!-- <param name="true_pose_topic" value="/camera/true_pose"/> -->
        <param name="cloud_topic" value="/rtabmap/cloud_map" />
        <param name="sem_cloud_topic" value="$(arg sem_cloud_topic)" />
        <!-- topics for local policy generation -->
        <param name="odom_topic" value="/odom" />
        <param name="grid_map_topic" value="/rtabmap/grid_map" />
        <param name="wheel_odom" value="$(arg wheel_odom)" />
        <param name="wheel_odom_frame_id" value="$(arg wheel_odom_frame_id)" />
        <param name="ground_truth_odom" value="$(arg ground_truth_odom)" />
        <param name="ground_truth_odom_topic" value="$(arg ground_truth_odom_topic)" />

    </node>
</launch>